services:
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    container_name: "pyrrhos_postgres"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    user: postgres
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

  server:
    image: "pyrrhos/server"
    container_name: "pyrrhos_server"
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        API_PORT: ${API_PORT}
    environment:
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      API_REQUEST_LOG: ${API_REQUEST_LOG}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      DB_HOST: postgres
      DB_DRIVER: pgx
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_SSL_MODE: ${DB_SSL_MODE:-prefer}
      DB_MAX_CONNECTION_POOL: ${DB_MAX_CONNECTION_POOL:-4}
      DB_MAX_IDLE_CONNECTIONS: ${DB_MAX_IDLE_CONNECTIONS:-4}
      DB_CONNECTIONS_MAX_LIFETIME: ${DB_CONNECTIONS_MAX_LIFETIME:-300s}
      AUTH_SIGNINGKEY: ${AUTH_SIGNINGKEY}
      AUTH_REFRESHKEY: ${AUTH_REFRESHKEY}
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "/usr/bin/local/healthcheck"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.25"
          memory: 200M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:size=50M

  client:
    image: "pyrrhos/client"
    container_name: "pyrrhos_client"
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${API_URL}
        NODE_ENV: production
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://0.0.0.0"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:size=50M
      - /var/cache/nginx:size=50M
      - /var/run:size=50M

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: ${DATA_PATH:-/var/lib/nuts}/postgres
      o: bind
